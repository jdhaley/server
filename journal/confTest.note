<module>
	<use href="core">
	</use>
	<s key='core' facets='use' value='"/journal/core.note"'>
	</s>
	<s keyword='use' value='"/journal/core.note" [any, string, object, number]'/>
	<s keyword='use' value='"/journal/core.note"'>
		<s key='any' value='any'/>
		<s key='object'/>
		<s value='string'/>
	</s>
	<s key='field1' value='"hello" slice(1)'/>
	<s key='field2' value='13'>
		<note><p>The value is set to 13 because</p></note>
	</s> 
	<s key='field3' value='false'/> 
	<s key='container'>
		<s key='a' value='one'/>
		<s key='b' value='two'/>
		<s value='not a property'/>
	</s>
		<s key="test" type="object">
		<s key="&quot;an expression&quot;" type="number" value="&quot;hello, world&quot; slice(0, 5) indexOf(&quot;o&quot;)">
			<note><p>A key can be a string.</p></note>
		</s>
		<s key="other" type="string" value="&quot;hello&quot;"/>
		<s key="get factor" type="(this: void, num: number, value: number) ^ number">
			<note><p>This is a silly little function for testing.</p></note>
			<s keyword="if" value="num">
				<s keyword="return" value="num add(value) mul(5)" />
			</s>
			<s keyword="else if" value="num eq(2)">
				<s value="num = 4" />
				<s keyword="return" value="num" />
			</s>
			<s keyword="else">
				<s keyword="return" value="3" />
			</s>
		</s>
	</s>
	<s key="test2" facets="const static" type="array">
		<s value="10" />
		<s value="&quot;hello&quot;" />
		<s value="20" />
		<s value="30" />
	</s>
</module>